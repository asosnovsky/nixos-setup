# general {
#     lock_cmd = notify-send "hyprctl notify 0 5000 'rgb(ff0000)' 'Locking...'"          # dbus/sysd lock command (loginctl lock-session)
#     # unlock_cmd = notify-send "unlock!"      # same as above, but unlock
#     before_sleep_cmd = notify-send "hyprctl notify 0 5000 'rgb(ff0000)' 'Going to sleep...'"    # command ran before sleep
#     # after_sleep_cmd = notify-send "Awake!"  # command ran after sleep
#     ignore_dbus_inhibit = false             # whether to ignore dbus-sent idle-inhibit requests (used by e.g. firefox or steam)
# }

# listener {
#     timeout = 300                            # in seconds
#     on-timeout = notify-send "You are idle!" # command to run when timeout has passed
# }

# listener {
#     timeout = 305                          # in seconds
#     on-timeout = notify-send "Going!" # command to run when timeout has passed
#     on-resume = notify-send "Welcome back!"  # command to run when activity is detected after timeout has fired.
# }

general {
    # lock_cmd = pidof hyprlock || hyprlock       # avoid starting multiple hyprlock instances.
    before_sleep_cmd = loginctl lock-session    # lock before suspend.
    after_sleep_cmd = hyprctl dispatch dpms on  # to avoid having to press a key twice to turn on the display.
}

listener {
    timeout = 15                                # 2.5min.
    on-timeout = brightnessctl -s set 10         # set monitor backlight to minimum, avoid 0 on OLED monitor.
    on-resume = brightnessctl -r                 # monitor backlight restor.
}

# turn off keyboard backlight, uncomment this section if have keyboard backlight.
listener { 
    timeout = 15                                        # 2.5min.
    on-timeout = brightnessctl -sd rgb:kbd_backlight set 0 # turn off keyboard backlight.
    on-resume = brightnessctl -rd rgb:kbd_backlight        # turn on keyboard backlight.
}

listener {
    timeout = 30                              # 5min
    on-timeout = loginctl lock-session            # lock screen when timeout has passed
}

listener {
    timeout = 38                             # 5.5min
    on-timeout = hyprctl dispatch dpms off        # screen off when timeout has passed
    on-resume = hyprctl dispatch dpms on          # screen on when activity is detected after timeout has fired.
}

listener {
    timeout = 180                              # 30min
    on-timeout = systemctl suspend                # suspend pc
}